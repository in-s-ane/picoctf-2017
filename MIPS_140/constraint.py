from z3 import *

x = BitVec('x', 32)

s = Solver()
# s.add(
# ((((((x & 0xff0000) >> 16) - 81) - (((((x & 0xff0000) >> 16) - 81) << 8) - (((x & 0xff0000) >> 16) - 81) << 6)) << 16) + ((((x & 0xffffffffff000000) >> 24) - 175) << 24) + (71 << 8)) +
# ((x & 0xff) - ((x & 0xffffffffff000000) >> 24) - ((x & 0xff0000) >> 16)) == 0)

s.add(
((((((((x & 0xff0000) >> 16) - 81) << 8) - ((((x & 0xff0000) >> 16) - 81) << 6)) << 16) + ((((x & 0xffffffffff000000) >> 24) - 175) << 24)) + (71 << 8)) + ((x & 0xff) - (((x & 0xffffffffff000000) >> 24) - ((x & 0xff0000) >> 16))) == 0)

# s.add(
# ((((((((x & 0xff0000) >> 16) - 81) << 8) - ((((x & 0xff0000) >> 16) - 81) << 6)) << 16) + ((((x & 0xffffffffff000000) >> 24) - 175) << 24)) + (0 << 8)) + ((x & 0xff) - (((x & 0xffffffffff000000) >> 24) - ((x & 0xff0000) >> 16))) == 0)

s.add(x < 2147483648)
print s.check()
print s.model()

