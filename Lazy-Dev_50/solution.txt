Looking at the source of the website, we find the following bits of javascript:

    function validate(pword) {
        return false;
    }
    function make_ajax_req(input) {
        var text_response;
        var http_req = new XMLHttpRequest();
        var params = "pword_valid=" + input.toString();
        http_req.open("POST", "login", true);
        http_req.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        http_req.onreadystatechange = function() {
            if (http_req.readyState == 4 && http_req.status == 200) {
                document.getElementById("res").innerHTML = http_req.responseText;
            }
        }
        http_req.send(params);
    }
    function process_password() {
        var pword = document.getElementById("password").value;
        var res = validate(pword);
        var server_res = make_ajax_req(res);
    }

Authentication appears to be client-side, using the validate() function. However, the function
simply returns false, so no matter what you input, the server will say the password is invalid.
We can bypass this by calling the make_ajax_req() function directly in the console, with the parameter
being true.

> make_ajax_req(true);

After executing that, we get the flag:
client_side_is_the_dark_side0c97381c155aae62b9ce3c59845d6941
